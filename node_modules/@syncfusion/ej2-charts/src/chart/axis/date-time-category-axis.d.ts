import { Axis } from '../axis/axis';
import { Category } from '../axis/category-axis';
import { Size } from '@syncfusion/ej2-svg-base';
import { Chart } from '../chart';
import { RangeIntervalType } from '../../common/utils/enum';
/**
 * Category module is used to render category axis.
 */
export declare class DateTimeCategory extends Category {
    private axisSize;
    /**
     * Constructor for the category module.
     *
     * @private
     */
    constructor(chart: Chart);
    /**
     * The function to calculate the range and labels for the axis.
     *
     * @returns {void}
     * @private
     */
    calculateRangeAndInterval(size: Size, axis: Axis): void;
    /**
     * Calculate label for the axis.
     *
     * @private
     */
    calculateVisibleLabels(axis: Axis): void;
    /** @private */
    private blazorCustomFormat;
    /**
     * To get the Indexed axis label text with axis format for DateTimeCategory axis.
     *
     * @param {string} value value
     * @param {Function} format format
     * @returns {string} Indexed axis label text
     */
    getIndexedAxisLabel(value: string, format: Function): string;
    /**
     * get same interval
     */
    sameInterval(currentDate: number, previousDate: number, type: RangeIntervalType, index: number): boolean;
    /**
     * To check whether the current label comes in the same week as the previous label week.
     */
    private StartOfWeek;
    /**
     * To check whether the distance between labels is above the axisLabel maximum length.
     */
    isMaximum(index: number, previousIndex: number, axis: Axis): boolean;
    /**
     * Get module name
     */
    protected getModuleName(): string;
    /**
     * To destroy the category axis.
     *
     * @returns {void}
     * @private
     */
    destroy(): void;
}
