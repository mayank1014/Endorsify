{"version":3,"file":"ej2-pdf-export.min.js","sources":["../../src/implementation/collections/utils.js","../../src/implementation/collections/dictionary.js","../../src/implementation/primitives/pdf-name.js","../../src/implementation/input-output/pdf-operators.js","../../src/implementation/input-output/pdf-dictionary-properties.js","../../src/implementation/primitives/pdf-dictionary.js","../../src/implementation/primitives/pdf-number.js","../../src/implementation/primitives/pdf-array.js","../../src/implementation/primitives/pdf-stream.js","../../src/implementation/primitives/pdf-string.js","../../src/implementation/primitives/pdf-reference.js","../../src/implementation/actions/action.js","../../src/implementation/actions/uri-action.js","../../src/implementation/graphics/enum.js","../../src/implementation/graphics/pdf-color.js","../../src/implementation/drawing/pdf-drawing.js","../../src/implementation/graphics/brushes/pdf-brush.js","../../src/implementation/graphics/brushes/pdf-solid-brush.js","../../src/implementation/graphics/fonts/enum.js","../../src/implementation/graphics/fonts/pdf-string-format.js","../../src/implementation/graphics/fonts/string-tokenizer.js","../../src/implementation/graphics/fonts/string-layouter.js","../../src/implementation/graphics/fonts/pdf-font.js","../../src/implementation/input-output/pdf-writer.js","../../src/implementation/input-output/enum.js","../../src/implementation/input-output/pdf-main-object-collection.js","../../src/implementation/document/pdf-document-base.js","../../src/implementation/input-output/cross-table.js","../../src/implementation/primitives/pdf-boolean.js","../../src/implementation/document/pdf-viewer-preferences.js","../../src/implementation/document/pdf-catalog.js","../../src/implementation/input-output/pdf-cross-table.js","../../src/implementation/pages/pdf-page-size.js","../../src/implementation/pages/enum.js","../../src/implementation/graphics/pdf-margins.js","../../src/implementation/pages/pdf-page-settings.js","../../src/implementation/input-output/pdf-stream-writer.js","../../src/implementation/graphics/pdf-pen.js","../../src/implementation/graphics/pdf-transformation-matrix.js","../../src/implementation/graphics/constants.js","../../src/implementation/collections/object-object-pair/dictionary.js","../../src/implementation/graphics/pdf-transparency.js","../../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../../src/implementation/graphics/figures/base/graphics-element.js","../../src/implementation/document/automatic-fields/automatic-field.js","../../src/implementation/document/automatic-fields/automatic-field-info.js","../../src/implementation/graphics/images/byte-array.js","../../src/implementation/graphics/images/image-decoder.js","../../src/implementation/graphics/unit-convertor.js","../../src/implementation/graphics/images/pdf-image.js","../../src/implementation/graphics/images/pdf-bitmap.js","../../src/implementation/graphics/fonts/ttf-table-info.js","../../src/implementation/graphics/fonts/ttf-name-table.js","../../src/implementation/graphics/fonts/ttf-name-record.js","../../src/implementation/graphics/fonts/ttf-head-table.js","../../src/implementation/graphics/fonts/ttf-metrics.js","../../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../../src/implementation/graphics/fonts/ttf-OS2-Table.js","../../src/implementation/graphics/fonts/ttf-post-table.js","../../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-cmap-table.js","../../src/implementation/graphics/fonts/ttf-glyph-info.js","../../src/implementation/graphics/fonts/ttf-loca-table.js","../../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-glyph-header.js","../../src/implementation/input-output/big-endian-writer.js","../../src/implementation/graphics/fonts/ttf-reader.js","../../src/implementation/graphics/fonts/pdf-font-metrics.js","../../src/implementation/graphics/fonts/unicode-true-type-font.js","../../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../../src/implementation/graphics/fonts/rtl-renderer.js","../../src/implementation/graphics/figures/enum.js","../../src/implementation/graphics/brushes/pdf-gradient-brush.js","../../src/implementation/graphics/figures/pdf-template.js","../../src/implementation/graphics/pdf-resources.js","../../src/implementation/graphics/brushes/pdf-tiling-brush.js","../../src/implementation/graphics/pdf-graphics.js","../../src/implementation/pages/pdf-page-layer.js","../../src/implementation/general/pdf-collection.js","../../src/implementation/pages/pdf-page-layer-collection.js","../../src/implementation/pages/pdf-page-base.js","../../src/implementation/annotations/annotation-collection.js","../../src/implementation/pages/pdf-page.js","../../src/implementation/pages/page-added-event-arguments.js","../../src/implementation/pages/pdf-section-page-collection.js","../../src/implementation/document/pdf-document-template.js","../../src/implementation/pages/pdf-section-templates.js","../../src/implementation/pages/pdf-section.js","../../src/implementation/pages/pdf-section-collection.js","../../src/implementation/pages/pdf-document-page-collection.js","../../src/implementation/general/pdf-cache-collection.js","../../src/implementation/document/pdf-document.js","../../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../../src/implementation/graphics/fonts/pdf-standard-font.js","../../src/implementation/annotations/annotation.js","../../src/implementation/annotations/link-annotation.js","../../src/implementation/annotations/action-link-annotation.js","../../src/implementation/annotations/document-link-annotation.js","../../src/implementation/graphics/figures/base/element-layouter.js","../../src/implementation/structured-elements/grid/styles/pdf-borders.js","../../src/implementation/graphics/figures/layout-element.js","../../src/implementation/graphics/figures/base/text-layouter.js","../../src/implementation/graphics/figures/text-element.js","../../src/implementation/annotations/uri-annotation.js","../../src/implementation/annotations/pdf-text-web-link.js","../../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../../src/implementation/document/automatic-fields/multiple-value-field.js","../../src/implementation/document/automatic-fields/pdf-page-number-field.js","../../src/implementation/document/automatic-fields/composite-field.js","../../src/implementation/document/automatic-fields/single-value-field.js","../../src/implementation/document/automatic-fields/page-count-field.js","../../src/implementation/general/enum.js","../../src/implementation/general/pdf-destination.js","../../src/implementation/graphics/brushes/enum.js","../../src/implementation/general/functions/pdf-function.js","../../src/implementation/general/functions/pdf-sampled-function.js","../../src/implementation/graphics/brushes/pdf-brushes.js","../../src/implementation/graphics/brushes/pdf-blend.js","../../src/implementation/graphics/brushes/pdf-color-blend.js","../../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../../src/implementation/structured-elements/tables/light-tables/enum.js","../../src/implementation/structured-elements/grid/styles/style.js","../../src/implementation/structured-elements/grid/pdf-grid-cell.js","../../src/implementation/structured-elements/grid/pdf-grid-column.js","../../src/implementation/structured-elements/grid/pdf-grid-row.js","../../src/implementation/structured-elements/grid/pdf-grid.js","../../src/implementation/structured-elements/grid/layout/grid-layouter.js","../../src/implementation/graphics/figures/base/shape-layouter.js","../../src/implementation/graphics/figures/base/pdf-shape-element.js","../../src/implementation/graphics/figures/base/draw-element.js","../../src/implementation/graphics/figures/base/fill-element.js","../../src/implementation/graphics/figures/path.js","../../src/implementation/graphics/figures/rectangle-area.js","../../src/implementation/graphics/figures/ellipse-part.js","../../src/implementation/graphics/figures/arc.js","../../src/implementation/graphics/fonts/pdf-true-type-font.js","../../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isResource = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify));\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isResource","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","isFont","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_dictionaryProperties","_centerWindow","_fitWindow","_displayTitle","_splitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","PdfPageMode","UseNone","_pageLayout","PdfPageLayout","SinglePage","_dictionary","_duplex","DuplexMode","_catalog","_mapPageMode","_mapDuplexMode","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","readNextTwoBytes","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","st","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","reArrange","pstart","pend","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","drawRoundedRectangle","radius","diameter","arc","_pathPoints","_pathTypes","startFigure","_addArc","CloseSubpath","_drawPath","Alternate","startAngle","sweepAngle","points","_getBezierArcPoints","_addArcPoints","Bezier3","pointType","_addPoint","Start","_getLastPoint","Line","lastPoint","x1","y1","s1","e1","tmp","fragAngle","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointList","theta0","theta1","cos0","cos1","sin0","sin1","Winding","isPen","isBrush","isEvenOdd","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","pathPoints","pathTypes","fillMode","buildUpPath","drawArc","constructArcPath","cnt","typeValue","p2","p3","getBezierPoints","checkFlags","pathTypesValuesMask","startAng","getBezierArc","pt","numX1","numY1","numX2","numY2","fragAngle1","pointsList","thetaValue0","thetaValue1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","elements_1","forEach","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","blend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","rBrush","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","pointCount","xmin","xmax","ymin","ymax","PdfRectangleArea","PdfEllipsePart","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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IAAK,KAC5CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,OAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAE7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,KAAM,MAC7CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,MAC9CR,KAAKsiD,yBAAyB9hD,SAAS,KAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,OAC9CR,KAAKsiD,yBAAyB9hD,SAAS,MAAO,QAE3C2hD,KAGPW,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,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK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AK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAA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"}